/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–æ–µ–∫—Ç–∞
 * –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
 */

const serpapiCollector = require('./serpapi-collector');
const processResults = require('./process-results');

async function main() {
  // –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
  const args = process.argv.slice(2);
  const mode = args[0] || 'process';

  try {
    if (mode === 'collect') {
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä—â–∏–∫ –¥–∞–Ω–Ω—ã—Ö —Å SerpAPI
      console.log('üîç –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ SerpAPI...\n');
      await serpapiCollector.run();
    } else if (mode === 'process') {
      // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      console.log('‚öôÔ∏è –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö...\n');
      await processResults.processResults();
    } else {
      console.error('‚õî –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "collect" –∏–ª–∏ "process"');
    }
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main().catch(console.error);
