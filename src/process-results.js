/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —É–∂–µ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 * –°–æ–∑–¥–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ API
 */

const fs = require('fs').promises;
const path = require('path');
const { existsSync, readdirSync } = require('fs');

// –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
const RESULTS_DIR = '/Users/wsgp/SergD_serp-collector/data/results';
// –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –∏—Å—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ —Ü–µ–ª–µ–≤–∞—è –ø–∞–ø–∫–∞ —Å–æ–≤–ø–∞–¥–∞—é—Ç
const SOURCE_RESULTS_DIR = RESULTS_DIR;

/**
 * –§–∏–ª—å—Ç—Ä—É–µ—Ç –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä—ã –∏ –±–∞–Ω–∫–∏ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
 * @param {Array} results - –ú–∞—Å—Å–∏–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
 * @returns {Array} - –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
 */
function filterAggregatorsAndBanks(results) {
  // –°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä–æ–≤ –∏ –±–∞–Ω–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å
  const excludeDomains = [
    // –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä—ã
    'banki.ru', 
    'sravni.ru', 
    'bankiros.ru', 
    'vbr.ru', 
    'sreavu.ru',
    '13min.ru',
    'brobank.ru',
    'viberu.ru',
    'calculator-credit.ru',
    'kredity.ru',
    'consultant.ru',
    'rbc.ru',
    'financer.com',
    'bankstoday.net',
    
    // –ë–∞–Ω–∫–∏
    'sberbank.ru',
    'vtb.ru',
    'alfabank.ru',
    'gazprombank.ru',
    'raiffeisen.ru',
    'rshb.ru',
    'tinkoff.ru',
    'open.ru',
    'otpbank.ru',
    'psbank.ru',
    'mkb.ru',
    'sovcombank.ru',
    'unicredit.ru',
    'citibank.ru',
    'pochtabank.ru',
    'uralsib.ru',
    'rosbank.ru',
    'roscap.ru',
    'homecredit.ru',
    'bancaintesa.ru',
    'bspb.ru',
    'absolutbank.ru',
    'mtsbank.ru',
    'ing.ru',
    'zenit.ru',
    'bank-hlynov.ru',
    'credit-suisse.com',
    'tkbbank.ru',
    'tbank.ru',
    'belgazzprombank.by',
    'belgazprombank.by',
    'myfin.by',
    'mtbank.by',
    'rsb.ru',
    'dtb1.ru',
    'nskbl.ru',
    'norvikbank.ru',
    'tatsotsbank.ru',
    'abank.ru',
    'ingobank.ru',
    'svoi.ru',
    'ubrir.ru',
    'creditural.ru',
    'samolet.ru',
    'ogrz.ru',
    'akbars.ru',
    'touchka.com',
    'royalfinance.ru',
    'finuslugi.ru',
    'vsezaimyonline.ru',
    'ubrr.ru',
    'tochka.com',
    'business.yandex',
    'blog.domclick.ru',
    'bki-okb.ru',
    'kontur.ru',
    'finlab.ru',
    'bank',
    '.bank',
    'vtbbiz',
    'sberbank',
    'vtb',
    'alfabank',
    'tinkoff',
    'royal finance'
  ];
  
  return results.filter(result => {
    if (!result.domain) return false;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–º–µ–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∏ –æ–¥–∏–Ω –∏–∑ –∏—Å–∫–ª—é—á–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤
    return !excludeDomains.some(excludeDomain => 
      result.domain.includes(excludeDomain)
    );
  });
}

/**
 * –£–¥–∞–ª—è–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã —Å–∞–π—Ç–æ–≤ –ø–æ –¥–æ–º–µ–Ω—É
 * @param {Array} results - –ú–∞—Å—Å–∏–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
 * @returns {Array} - –ú–∞—Å—Å–∏–≤ –±–µ–∑ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
 */
function removeDuplicateDomains(results) {
  const uniqueDomains = {};
  const uniqueResults = [];
  
  for (const result of results) {
    if (!uniqueDomains[result.domain]) {
      uniqueDomains[result.domain] = true;
      uniqueResults.push(result);
    }
  }
  
  return uniqueResults;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç CSV —Ñ–∞–π–ª —Å –¥–æ–º–µ–Ω–∞–º–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞
 * @param {Array} sites - –ú–∞—Å—Å–∏–≤ —Å–∞–π—Ç–æ–≤
 * @returns {Promise<void>}
 */
async function createCsvForIntercept(sites) {
  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ CSV
    let csvContent = 'domain,title,url,snippet\n';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–∂–¥–æ–º —Å–∞–π—Ç–µ
    sites.forEach(site => {
      // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –∏ —Å–Ω–∏–ø–ø–µ—Ç–µ
      const safeTitle = site.title ? site.title.replace(/"/g, '""') : '';
      const safeSnippet = site.snippet ? site.snippet.replace(/"/g, '""') : '';
      
      csvContent += `${site.domain},"${safeTitle}","${site.url}","${safeSnippet}"\n`;
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º CSV —Ñ–∞–π–ª
    const csvPath = path.join(RESULTS_DIR, 'domains_for_intercept.csv');
    await fs.writeFile(csvPath, csvContent, 'utf8');
    console.log(`‚úÖ CSV —Ñ–∞–π–ª –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω: ${csvPath}`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ CSV —Ñ–∞–π–ª–∞:', error.message);
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
 */
async function processResults() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...');
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!existsSync(RESULTS_DIR)) {
    require('fs').mkdirSync(RESULTS_DIR, { recursive: true });
  }
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ SerpAPI
    const files = readdirSync(SOURCE_RESULTS_DIR)
      .filter(file => file.startsWith('serpapi_') && file.endsWith('.json'));
    
    console.log(`üìÇ –ù–∞–π–¥–µ–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏`);
    
    // –ú–∞—Å—Å–∏–≤ –¥–ª—è –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    let allResults = [];
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
    for (const file of files) {
      try {
        const filePath = path.join(SOURCE_RESULTS_DIR, file);
        const content = await fs.readFile(filePath, 'utf8');
        const results = JSON.parse(content);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –æ–±—â–∏–π –º–∞—Å—Å–∏–≤
        allResults = [...allResults, ...results];
        
        console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω —Ñ–∞–π–ª: ${file} (${results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤)`);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ ${file}:`, error.message);
      }
    }
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä—ã –∏ –±–∞–Ω–∫–∏, —É–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    const filteredResults = filterAggregatorsAndBanks(allResults);
    const uniqueResults = removeDuplicateDomains(filteredResults);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const finalResultsPath = path.join(RESULTS_DIR, 'final_results.json');
    await fs.writeFile(finalResultsPath, JSON.stringify(uniqueResults, null, 2));
    console.log(`üíæ –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ ${finalResultsPath}`);
    
    // –°–æ–∑–¥–∞–µ–º CSV –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞
    await createCsvForIntercept(uniqueResults);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = {
      totalFiles: files.length,
      totalResults: allResults.length,
      filteredResults: filteredResults.length,
      uniqueResults: uniqueResults.length,
      processDate: new Date().toISOString()
    };
    
    await fs.writeFile(
      path.join(RESULTS_DIR, 'stats.json'),
      JSON.stringify(stats, null, 2)
    );
    
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:');
    console.log(`- –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`);
    console.log(`- –í—Å–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${allResults.length}`);
    console.log(`- –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ${filteredResults.length}`);
    console.log(`- –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤: ${uniqueResults.length}`);
    
    return uniqueResults.length;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', error.message);
    return 0;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç, –µ—Å–ª–∏ –æ–Ω –∑–∞–ø—É—â–µ–Ω –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ
if (require.main === module) {
  processResults().catch(console.error);
}

module.exports = { processResults };
